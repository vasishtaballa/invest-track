{"version":3,"sources":["./src/app/pipes/inr-currency/inr-currency.pipe.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/trading-amount/trading-amount.component.ts","./src/app/components/trading-amount/trading-amount.component.html","./src/app/constants/grid-col-defs/portfolio-col-defs.constant.ts","./src/app/services/http/http.service.ts","./src/environments/environment.ts","./src/app/components/portfolio-item/portfolio-item.component.ts","./src/app/components/portfolio-item/portfolio-item.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/constants/service-urls.constant.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/portfolio/portfolio.component.ts","./src/app/components/portfolio/portfolio.component.html","./src/app/components/sell-equity-modal/sell-equity-modal.component.ts","./src/app/components/sell-equity-modal/sell-equity-modal.component.html","./src/app/components/ag-grid-components/sell-btn-renderer/sell-btn-renderer.component.ts","./src/app/components/ag-grid-components/sell-btn-renderer/sell-btn-renderer.component.html","./src/app/constants/grid-col-defs/deposits-col-defs.constant.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'inrCurrency'\n})\nexport class InrCurrencyPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): string {\n    if (value != null) {\n      return Number(value).toLocaleString('en-IN', {\n        style: 'currency',\n        currency: 'INR',\n        maximumFractionDigits: 2\n      });\n    }\n    return Number(0).toLocaleString('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      maximumFractionDigits: 2\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" routerLink=\"\">Dashboard</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-link\" routerLink=\"/portfolio\">Portfolio</a>\n            <a class=\"nav-link\" routerLink=\"/trading-amount\">Trading Amount</a>\n            <a class=\"nav-link\" routerLink=\"/wishlist\">Wishlist</a>\n            <a class=\"nav-link\" routerLink=\"/setAlert\">Set Alert</a>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { ColDef, GridApi, GridOptions } from 'ag-grid-community';\nimport { DepositsColDefs } from 'src/app/constants/grid-col-defs/deposits-col-defs.constant';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\nimport { HttpService } from 'src/app/services/http/http.service';\n\n@Component({\n  selector: 'app-trading-amount',\n  templateUrl: './trading-amount.component.html',\n  styleUrls: ['./trading-amount.component.css']\n})\nexport class TradingAmountComponent implements OnInit {\n\n  deposit: any;\n  rowData: any[] = [];\n  public columnDefs: ColDef[];\n  public gridApi: GridApi;\n  public gridColumnApi;\n  public gridOptions: GridOptions;\n  public totalAmount: number;\n\n  constructor(private httpService: HttpService) { }\n\n  ngOnInit(): void {\n    this.deposit = {};\n    this.getDeposits();\n  }\n\n  onGridReady(params): void {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n\n  getDeposits(): void {\n    this.httpService.get(this.httpService.getCompleteURL(ServiceURLs.GET_DEPOSITS))\n      .subscribe(res => {\n        this.rowData = res.response;\n        this.columnDefs = DepositsColDefs.COLUMN_DEFS;\n        this.getTotalDeposits();\n        this.deposit = {};\n      })\n  }\n\n  getTotalDeposits(): void {\n    let total = 0;\n    this.rowData.forEach(deposit => {\n      total += deposit.amount;\n    });\n    this.totalAmount = total;\n  }\n\n  addTransaction(): void {\n    this.httpService.post(this.httpService.getCompleteURL(ServiceURLs.ADD_DEPOSIT), this.deposit)\n      .subscribe(res => {\n        this.getDeposits();\n      });\n  }\n\n}\n","<div class=\"container-fluid\">\n    <form class=\"form-inline\">\n        <div class=\"form-group col-md-2 mb-2\">\n            <label for=\"date\">Date</label>\n            <input type=\"text\" autocomplete=\"off\" class=\"form-control ml-2\" name=\"date\" #dp=\"bsDatepicker\" bsDatepicker\n                [(ngModel)]=\"deposit.date\">\n        </div>\n        <div class=\"form-group col-md-4\">\n            <label for=\"amount\">Amount</label>\n            <input type=\"text\" autocomplete=\"off\" class=\"form-control ml-2\" id=\"amount\" name=\"amount\"\n                [(ngModel)]=\"deposit.amount\">\n            <button class=\"btn btn-primary ml-3\" (click)=\"addTransaction()\">Add transaction</button>\n        </div>\n        <div class=\"form-group col-md-3\">\n            <dt class=\"col-6\">Grand Total</dt>\n            <dd class=\"col-6\">{{ totalAmount | inrCurrency }}</dd>\n        </div>\n    </form>\n    <div class=\"col-6 mt-2\" *ngIf=\"rowData.length > 0\">\n        <ag-grid-angular style=\"width: 100%; height: 500px;\" class=\"ag-theme-alpine\" [rowData]=\"rowData\"\n            [columnDefs]=\"columnDefs\" (gridReady)=\"onGridReady($event)\" [gridOptions]=\"gridOptions\">\n        </ag-grid-angular>\n    </div>\n</div>","import { ColDef } from 'ag-grid-community';\nimport * as moment from 'moment';\n\nexport namespace PortfolioColDefs {\n    export const COLUMN_DEFS: ColDef[] = [\n        {\n            headerName: 'Equity Name',\n            field: 'equityName',\n            resizable: true\n        },\n        {\n            headerName: 'Trade Date',\n            field: 'date',\n            valueFormatter: dateFormatter,\n            resizable: true\n        },\n        {\n            headerName: 'Exchange',\n            field: 'exchange',\n            resizable: true\n        },\n        {\n            headerName: 'Trade Price',\n            field: 'price',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: 'Current Price',\n            field: 'currentPrice',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: 'Quantity',\n            field: 'qty',\n            resizable: true\n        },\n        {\n            headerName: 'Brokerage (%)',\n            field: 'brokerage',\n            valueFormatter: percentageFormatter,\n            resizable: true\n        },\n        {\n            headerName: 'Target (%)',\n            field: 'target',\n            valueFormatter: percentageFormatter,\n            resizable: true\n        },\n        {\n            headerName: 'Margin (%)',\n            field: 'margin',\n            valueFormatter: percentageFormatter,\n            resizable: true,\n            cellClass: getMarginCellClass\n        },\n        {\n            headerName: 'Price Before Tax',\n            field: 'pbt',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: 'Brokerage Amount',\n            field: 'brokerageAmount',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: 'Taxes',\n            field: 'taxes',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: 'Net',\n            field: 'net',\n            resizable: true,\n            valueFormatter: inrFormatter\n        },\n        {\n            headerName: '',\n            cellRenderer: 'sellBtnRenderer'\n        },\n        {\n            field: 'mcSymbol',\n            hide: true\n        }\n    ];\n\n    function dateFormatter(params): string {\n        let date: moment.Moment = moment(params.data.date);\n        return date.format('DD-MMM-YYYY');\n    }\n\n    function percentageFormatter(params): string {\n        let key = params.colDef.field;\n        return params.data[key] + '%';\n    }\n\n    function inrFormatter(params): string {\n        let key = params.colDef.field;\n        let value = params.data[key];\n        if (value != null) {\n            return Number(value).toLocaleString('en-IN', {\n                style: 'currency',\n                currency: 'INR',\n                maximumFractionDigits: 2\n            });\n        }\n        return Number(0).toLocaleString('en-IN', {\n            style: 'currency',\n            currency: 'INR',\n            maximumFractionDigits: 2\n        });\n    }\n\n    function getMarginCellClass(params): string[] {\n        let classes: string[] = [];\n        let margin = params.data.margin;\n        if (margin < 0)\n            classes.push('loss');\n        else\n            classes.push('profit');\n        return classes;\n    }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  get(url: string): Observable<any> {\n    return this.httpClient.get(url);\n  }\n\n  post(url: string, body: any): Observable<any> {\n    return this.httpClient.post(url, body);\n  }\n\n  getCompleteURL(url): string {\n    return ServiceURLs.BASE_URL + url;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\nimport { TypeHead } from 'src/app/models/type-head/type-head.model';\nimport { HttpService } from 'src/app/services/http/http.service';\n\n@Component({\n  selector: 'app-portfolio-item',\n  templateUrl: './portfolio-item.component.html',\n  styleUrls: ['./portfolio-item.component.css']\n})\nexport class PortfolioItemComponent implements OnInit {\n\n  equity: any;\n  private event: EventEmitter<any> = new EventEmitter();\n  typeHead: TypeHead;\n\n  constructor(public bsModalRef: BsModalRef, private httpService: HttpService) { }\n\n  ngOnInit(): void {\n    this.equity = {};\n    this.typeHead = {\n      equities: [],\n      sectors: [],\n      exchanges: [],\n      equitySymbols: [],\n      mcEquitySymbols: []\n    };\n    this.httpService.get(this.httpService.getCompleteURL(ServiceURLs.GET_TYPEHEAD_DATA))\n      .subscribe(res => {\n        this.typeHead = res.response;\n      });\n  }\n\n  calculateAmounts(event: any): void {\n    let id = event.target.id;\n    if (id !== 'pbt')\n      this.equity.pbt = (parseFloat(this.equity.price) * parseFloat(this.equity.qty)).toFixed(2);\n    if (id !== 'brokerageAmount')\n      this.equity.brokerageAmount = ((parseFloat(this.equity.pbt) * parseFloat(this.equity.brokerage)) / 100).toFixed(2);\n    if (id !== 'net')\n      this.equity.net = (parseFloat(this.equity.pbt) + parseFloat(this.equity.brokerageAmount) + parseFloat(this.equity.taxes)).toFixed(2);\n    if (id !== 'brokerage')\n      this.equity.brokerage = ((parseFloat(this.equity.brokerageAmount) * 100) / parseFloat(this.equity.pbt)).toFixed(2);\n  }\n\n  addEquity(): void {\n    this.event.emit(this.equity);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Equity Details</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"date\">Date</label>\n                <input type=\"text\" autocomplete=\"off\" class=\"form-control\" #dp=\"bsDatepicker\" bsDatepicker name=\"date\"\n                    [(ngModel)]=\"equity.date\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"name\">Equity Name</label>\n                <input type=\"text\" autocomplete=\"off\" [typeahead]=\"typeHead.equities\" class=\"form-control\" id=\"name\"\n                    name=\"name\" [(ngModel)]=\"equity.name\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"sector\">Equity Sector</label>\n                <input type=\"text\" autocomplete=\"off\" [typeahead]=\"typeHead.sectors\" class=\"form-control\" id=\"sector\"\n                    name=\"sector\" [(ngModel)]=\"equity.sector\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"equitySymbol\">Equity Symbol</label>\n                <input type=\"text\" autocomplete=\"off\" [typeahead]=\"typeHead.equitySymbols\" class=\"form-control\"\n                    id=\"equitySymbol\" name=\"equitySymbol\" [(ngModel)]=\"equity.equitySymbol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"mcSymbol\">MC Equity Symbol</label>\n                <input type=\"text\" autocomplete=\"off\" [typeahead]=\"typeHead.mcEquitySymbols\" class=\"form-control\"\n                    id=\"mcSymbol\" name=\"mcSymbol\" [(ngModel)]=\"equity.mcSymbol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"exchange\">Exchange</label>\n                <input type=\"text\" autocomplete=\"off\" [typeahead]=\"typeHead.exchanges\" class=\"form-control\"\n                    id=\"exchange\" name=\"exchange\" [(ngModel)]=\"equity.exchange\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"price\">Price</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"price\" name=\"price\" [(ngModel)]=\"equity.price\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"qty\">Quantity</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\" id=\"qty\"\n                    name=\"qty\" [(ngModel)]=\"equity.qty\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"target\">Target (%)</label>\n                <input type=\"text\" autocomplete=\"off\" class=\"form-control\" id=\"target\" name=\"target\"\n                    [(ngModel)]=\"equity.target\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"brokerage\">Brokerage (%)</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"brokerage\" name=\"brokerage\" [(ngModel)]=\"equity.brokerage\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"pbt\">Price before Tax</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\" id=\"pbt\"\n                    name=\"pbt\" [(ngModel)]=\"equity.pbt\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"brokerageAmount\">Brokerage Amount</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"brokerageAmount\" name=\"brokerageAmount\" [(ngModel)]=\"equity.brokerageAmount\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"taxes\">Taxes</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"taxes\" name=\"taxes\" [(ngModel)]=\"equity.taxes\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"net\">Net</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" readonly class=\"form-control\"\n                    id=\"net\" name=\"net\" [(ngModel)]=\"equity.net\">\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addEquity()\">Add</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\nimport { Dashboard } from 'src/app/models/dashboard/dashboard.model';\nimport { HttpService } from 'src/app/services/http/http.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  dashboard: Dashboard;\n\n  constructor(private httpService: HttpService) { }\n\n  ngOnInit(): void {\n    this.getDashboardDetails();\n  }\n\n  getDashboardDetails(): void {\n    this.httpService.get(this.httpService.getCompleteURL(ServiceURLs.GET_DASHBOARD))\n    .subscribe(res => {\n      this.dashboard = res.response;\n    })\n  }\n\n}\n","<div class=\"container\" *ngIf=\"dashboard\">\n    <div class=\"row mt-5\">\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-danger\">\n                <span class=\"count-numbers\">{{ dashboard.totalInvestments | inrCurrency }}</span>\n                <span class=\"count-name\">Total Investments</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-dark\">\n                <span class=\"count-numbers\">{{ dashboard.totalWithdrew | inrCurrency }}</span>\n                <span class=\"count-name\">Total Withdrew</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-success\">\n                <span class=\"count-numbers\">{{ dashboard.totalTaxes | inrCurrency }}</span>\n                <span class=\"count-name\">Total Taxes</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-warning\">\n                <span class=\"count-numbers\">{{ dashboard.totalBrokerage | inrCurrency }}</span>\n                <span class=\"count-name\">Total Brokerage</span>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-warning\">\n                <span class=\"count-numbers\">{{ dashboard.currentInvestments | inrCurrency }}</span>\n                <span class=\"count-name\">Current Investments</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-success\">\n                <span class=\"count-numbers\">{{ dashboard.currentValueBT | inrCurrency }}</span>\n                <span class=\"count-name\">Current Value Before Tax</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-dark\">\n                <span class=\"count-numbers\">{{ dashboard.currentTaxes | inrCurrency }}</span>\n                <span class=\"count-name\">Current Taxes</span>\n            </div>\n        </div>\n\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-danger\">\n                <span class=\"count-numbers\">{{ dashboard.currentBrokerage | inrCurrency }}</span>\n                <span class=\"count-name\">Current Brokerage</span>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row mt-3\">\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-dark\">\n                <span class=\"count-numbers\">{{ dashboard.netCurrentValue | inrCurrency }}</span>\n                <span class=\"count-name\">Net Current Value</span>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-primary\">\n                <span class=\"count-numbers\">{{ dashboard.currentPL | inrCurrency }}</span>\n                <span class=\"count-name\">Current Profit/Loss</span>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-success\">\n                <span class=\"count-numbers\">{{ dashboard.currentMargin }}%</span>\n                <span class=\"count-name\">Current Margin</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-dark\">\n                <span class=\"count-numbers\">{{ dashboard.totalProfit | inrCurrency }}</span>\n                <span class=\"count-name\">Total Profits</span>\n            </div>\n        </div>\n        <div class=\"col-md-3\">\n            <div class=\"card-counter bg-primary\">\n                <span class=\"count-numbers\">{{ dashboard.totalMargin }}%</span>\n                <span class=\"count-name\">Total Margin</span>\n            </div>\n        </div>\n    </div>\n</div>","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","export namespace ServiceURLs {\n    export const BASE_URL = 'http://localhost:8080/';\n    export const GET_PORTFOLIO = 'portfolio/getPortfolio';\n    export const ADD_TRADE = 'trades/addTrade';\n    export const SELL_EQUITY = 'trades/sellEquity';\n    export const ADD_DEPOSIT = 'deposit/addDeposit';\n    export const GET_DEPOSITS = 'deposit/getDeposits';\n    export const GET_DASHBOARD = 'dashboard/getDashboard';\n    export const GET_TYPEHEAD_DATA = 'typeHead/getTypeHeads';\n    export const MC_PRICE_API = 'https://priceapi.moneycontrol.com/pricefeed/';\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  name = 'invest-track-ui';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\nimport { AgGridModule } from 'ag-grid-angular';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderComponent } from './components/header/header.component';\nimport { PortfolioComponent } from './components/portfolio/portfolio.component';\nimport { PortfolioItemComponent } from './components/portfolio-item/portfolio-item.component';\nimport { SellEquityModalComponent } from './components/sell-equity-modal/sell-equity-modal.component';\nimport { SellBtnRendererComponent } from './components/ag-grid-components/sell-btn-renderer/sell-btn-renderer.component';\nimport { TradingAmountComponent } from './components/trading-amount/trading-amount.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { InrCurrencyPipe } from './pipes/inr-currency/inr-currency.pipe';\n\n\nconst routes: Routes = [\n  { path: 'portfolio', component: PortfolioComponent },\n  { path: 'trading-amount', component: TradingAmountComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    PortfolioComponent,\n    PortfolioItemComponent,\n    SellEquityModalComponent,\n    SellBtnRendererComponent,\n    TradingAmountComponent,\n    DashboardComponent,\n    InrCurrencyPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    ModalModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    AgGridModule.withComponents([]),\n    TypeaheadModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { ColDef, FrameworkComponentWrapper, GridApi, GridOptions } from 'ag-grid-community';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { PortfolioColDefs } from 'src/app/constants/grid-col-defs/portfolio-col-defs.constant';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\nimport { HttpService } from 'src/app/services/http/http.service';\nimport { SellBtnRendererComponent } from '../ag-grid-components/sell-btn-renderer/sell-btn-renderer.component';\nimport { PortfolioItemComponent } from '../portfolio-item/portfolio-item.component';\n\n@Component({\n  selector: 'app-portfolio',\n  templateUrl: './portfolio.component.html',\n  styleUrls: ['./portfolio.component.css']\n})\nexport class PortfolioComponent implements OnInit {\n\n  private bsModalRef: BsModalRef;\n  private equity: any = {};\n  public rowData = [];\n  public columnDefs: ColDef[];\n  public gridApi: GridApi;\n  public gridColumnApi;\n  public frameworkComponents;\n  public gridOptions: GridOptions;\n  public defaultColDef: ColDef;\n\n  constructor(private bsModalService: BsModalService, private httpService: HttpService) {\n    this.defaultColDef = {\n      sortable: true\n    };\n  }\n\n  ngOnInit(): void {\n    this.initialize();\n  }\n\n  initialize(): void {\n    this.httpService.get(this.httpService.getCompleteURL(ServiceURLs.GET_PORTFOLIO))\n      .subscribe(res => {\n        this.columnDefs = PortfolioColDefs.COLUMN_DEFS;\n        this.frameworkComponents = {\n          sellBtnRenderer: SellBtnRendererComponent\n        };\n        this.gridOptions = {\n          context: {\n            componentParent: this\n          }\n        };\n        let response = res.response;\n        this.updatePortfolio(response);\n      });\n  }\n\n  updatePortfolio(response) {\n    let count = 0;\n    response.forEach((item, index) => {\n      this.httpService.get(this.getMCURL(ServiceURLs.MC_PRICE_API, item))\n        .subscribe(res => {\n          count++;\n          item.currentPrice = parseFloat(res.data.pricecurrent);\n          item.margin = this.getMargin(item.price, item.currentPrice);\n          response[index] = item;\n          if (count == response.length) {\n            this.rowData = response;\n          }\n        });\n    });\n  }\n\n  getMargin(costPrice, currentPrice): string {\n    return (((currentPrice - costPrice) / costPrice) * 100).toFixed(2);\n  }\n\n  getMCURL(url: string, data: any): string {\n    return url + data.exchange.toLowerCase() + '/equitycash/' + data.mcSymbol;\n  }\n\n  onGridReady(params): void {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.gridApi.sizeColumnsToFit();\n  }\n\n  addTrade(): void {\n    const initialState = {\n      equity: this.equity\n    }\n    this.bsModalRef = this.bsModalService.show(PortfolioItemComponent, { initialState, class: 'modal-lg' });\n    this.bsModalRef.content.event.subscribe(res => {\n      this.submitTrade(res);\n    });\n  }\n\n  refreshPortfolio(data: any): void {\n    this.initialize();\n  }\n\n  submitTrade(equity: any): void {\n    this.httpService.post(this.httpService.getCompleteURL(ServiceURLs.ADD_TRADE), equity)\n      .subscribe(res => {\n        this.refreshPortfolio(res);\n      })\n  }\n\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <button class=\"btn btn-primary\" (click)=\"addTrade()\">Add Trade</button>\n    </div>\n    <div class=\"row mt-2\" *ngIf=\"rowData.length > 0\">\n        <ag-grid-angular style=\"width: 100%; height: 500px;\" class=\"ag-theme-alpine\" [rowData]=\"rowData\"\n            [columnDefs]=\"columnDefs\" [defaultColDef]=\"defaultColDef\" (gridReady)=\"onGridReady($event)\" [frameworkComponents]=\"frameworkComponents\" [gridOptions]=\"gridOptions\">\n        </ag-grid-angular>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ServiceURLs } from 'src/app/constants/service-urls.constant';\nimport { HttpService } from 'src/app/services/http/http.service';\n\n@Component({\n  selector: 'app-sell-equity-modal',\n  templateUrl: './sell-equity-modal.component.html',\n  styleUrls: ['./sell-equity-modal.component.css']\n})\nexport class SellEquityModalComponent implements OnInit {\n\n  buyEqty: any;\n  sellEqty: any;\n\n  constructor(public bsModalRef: BsModalRef, private httpService: HttpService) { }\n\n  ngOnInit(): void {\n    this.sellEqty = {};\n  }\n\n  calculateAmounts(event: any): void {\n    let id = event.target.id;\n    if (id !== 'pbt')\n      this.sellEqty.pbt = (parseFloat(this.sellEqty.price) * parseFloat(this.sellEqty.qty)).toFixed(2);\n    if (id !== 'brokerageAmount')\n      this.sellEqty.brokerageAmount = ((parseFloat(this.sellEqty.pbt) * parseFloat(this.sellEqty.brokerage)) / 100).toFixed(2);\n    if (id !== 'net')\n      this.sellEqty.net = (parseFloat(this.sellEqty.pbt) - parseFloat(this.sellEqty.brokerageAmount) - parseFloat(this.sellEqty.taxes)).toFixed(2);\n    if (id !== 'brokerage')\n      this.sellEqty.brokerage = ((parseFloat(this.sellEqty.brokerageAmount) * 100) / parseFloat(this.sellEqty.pbt)).toFixed(2);\n    this.sellEqty.margin = (((parseFloat(this.sellEqty.price) - parseFloat(this.buyEqty.price)) / parseFloat(this.buyEqty.price)) * 100).toFixed(2);\n  }\n\n  sellEquity(): void {\n    this.sellEqty.buyTrade = this.buyEqty;\n    this.httpService.post(this.httpService.getCompleteURL(ServiceURLs.SELL_EQUITY), this.sellEqty)\n      .subscribe(res => {\n        console.log(res);\n      });\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Sell Equity Details</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"buyDate\">Buy Date</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" name=\"buyDate\"\n                    [(ngModel)]=\"buyEqty.date\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"equityName\">Equity Name</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" id=\"equityName\" name=\"equityName\"\n                    [(ngModel)]=\"buyEqty.equityName\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"sector\">Equity Sector</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" id=\"sector\" name=\"sector\"\n                    [(ngModel)]=\"buyEqty.sector\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"equitySymbol\">Equity Symbol</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" id=\"equitySymbol\"\n                    name=\"equitySymbol\" [(ngModel)]=\"buyEqty.equitySymbol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"mcSymbol\">MC Equity Symbol</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" id=\"mcSymbol\" name=\"mcSymbol\"\n                    [(ngModel)]=\"buyEqty.mcSymbol\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"exchange\">Exchange</label>\n                <input type=\"text\" readonly autocomplete=\"off\" class=\"form-control\" id=\"exchange\" name=\"exchange\"\n                    [(ngModel)]=\"buyEqty.exchange\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"date\">Sell Date</label>\n                <input type=\"text\" autocomplete=\"off\" class=\"form-control\" name=\"buyDate\" #dp=\"bsDatepicker\" bsDatepicker\n                    [(ngModel)]=\"sellEqty.date\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"price\">Price</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"price\" name=\"price\" [(ngModel)]=\"sellEqty.price\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"qty\">Quantity</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\" id=\"qty\"\n                    name=\"qty\" [(ngModel)]=\"sellEqty.qty\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"brokerage\">Brokerage (%)</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"brokerage\" name=\"brokerage\" [(ngModel)]=\"sellEqty.brokerage\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"pbt\">Price before Tax</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\" id=\"pbt\"\n                    name=\"pbt\" [(ngModel)]=\"sellEqty.pbt\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"brokerageAmount\">Brokerage Amount</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"brokerageAmount\" name=\"brokerageAmount\" [(ngModel)]=\"sellEqty.brokerageAmount\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"taxes\">Taxes</label>\n                <input type=\"text\" (change)=\"calculateAmounts($event)\" autocomplete=\"off\" class=\"form-control\"\n                    id=\"taxes\" name=\"taxes\" [(ngModel)]=\"sellEqty.taxes\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"margin\">Margin</label>\n                <input type=\"text\" autocomplete=\"off\" readonly class=\"form-control\"\n                    id=\"margin\" name=\"margin\" [(ngModel)]=\"sellEqty.margin\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"net\">Net</label>\n                <input type=\"text\" autocomplete=\"off\" readonly class=\"form-control\"\n                    id=\"net\" name=\"net\" [(ngModel)]=\"sellEqty.net\">\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-danger\" (click)=\"sellEquity()\">Sell</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { ICellRendererParams, IAfterGuiAttachedParams } from 'ag-grid-community';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { SellEquityModalComponent } from '../../sell-equity-modal/sell-equity-modal.component';\n\n@Component({\n  selector: 'app-sell-btn-renderer',\n  templateUrl: './sell-btn-renderer.component.html',\n  styleUrls: ['./sell-btn-renderer.component.css']\n})\nexport class SellBtnRendererComponent implements ICellRendererAngularComp, OnInit {\n\n  params: ICellRendererParams;\n  bsModalRef: BsModalRef;\n\n  constructor(private bsModalService: BsModalService) { }\n\n  refresh(params: any): boolean {\n    throw new Error('Method not implemented.');\n  }\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  afterGuiAttached?(params?: IAfterGuiAttachedParams): void {\n    throw new Error('Method not implemented.');\n  }\n\n  ngOnInit(): void {\n  }\n\n  sellEquity(item: any): void {\n    let initialState = {\n      buyEqty: this.params.data\n    }\n    this.bsModalRef = this.bsModalService.show(SellEquityModalComponent, { initialState, class: 'modal-lg' });\n    this.bsModalRef.onHide.subscribe(res => {\n      this.params.context.componentParent.refreshPortfolio(this.params);\n    })\n  }\n\n}\n","<button class=\"btn btn-danger\" (click)=\"sellEquity(this)\">Sell</button>","import { ColDef } from 'ag-grid-community';\nimport * as moment from 'moment';\n\nexport namespace DepositsColDefs {\n    export const COLUMN_DEFS: ColDef[] = [\n        {\n            headerName: 'Date',\n            field: 'date',\n            resizable: true,\n            valueFormatter: dateFormatter\n        },\n        {\n            headerName: 'Amount',\n            field: 'amount',\n            resizable: true\n        }\n    ];\n\n    function dateFormatter(params): string {\n        let date: moment.Moment = moment(params.data.date);\n        return date.format('DD-MMM-YYYY');\n    }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}